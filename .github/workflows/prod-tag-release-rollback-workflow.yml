name: On-Release Prod Workflow

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string


env:
  CF_ACCESS_CLIENT_ID: ${{ secrets.CF_ACCESS_CLIENT_ID }}
  CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  GH_TOKEN: ${{ secrets.GH_GRUNTY_OAUTH_TOKEN }}
  
jobs:
  build_deploy_prod:
    if: github.event_name == 'release' && ! github.event.release.draft && ! github.event.release.prerelease
    uses: tagsource/ci-tagsource/.github/workflows/build-deploy-workflow.yml@main
    secrets: inherit
    with:
      env: prod
      tag: ${{  github.ref_name }}
      action: Deploy

  deploy_prod_log:
    needs: build_deploy_prod
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && ! github.event.release.draft && ! github.event.release.prerelease
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fetch git tags
        id: git-fetch
        run: |
          git fetch -a
          echo ::set-output name=previous_tag::$(git tag --sort version:refname | tail -2 | head -1)
          git tag --sort "-committerdate" 

      # - name: Logging
      #   run: |
      #    sudo apt-get install systemd moreutils -yq
      #    echo "${{toJSON(github.event)}}"   

      - name: ReleasePublished
        id: changes
        run: |
          echo "Releasing ${{ github.event.release.tag_name }} to prod as a result of Publish Release event!"
      
      - name: Label PR in release
        id: pr_history_label
        run: |
          git log --merges --grep 'Merge pull request' --pretty=format:%s '${{ steps.git-fetch.outputs.previous_tag }}^'..${{ github.ref }}
          while read pr; do
            pr_id=$(echo $pr | awk '{print $4}' | sed 's/#//')
            echo $pr_id
            gh pr edit $pr_id --add-label "released_prod"
          done <<< "$(git log --merges --grep 'Merge pull request' --pretty=format:%s '${{ steps.git-fetch.outputs.previous_tag }}^'..${{ github.ref }} )"
      

  rollback_prepare:
    runs-on: ubuntu-latest
    outputs:
      previous_tag: ${{ steps.git-fetch.outputs.previous_tag }}
    if: github.event_name == 'release' && ! github.event.release.draft && github.event.release.prerelease
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fetch git tags
        id: git-fetch
        run: |
          git fetch -a
          git tag --sort "-committerdate" 
          gh release list
          echo ::set-output name=previous_tag::$(gh release list | grep Latest | awk '{print $2}')
          #echo ::set-output name=previous_tag::$(git tag --sort version:refname | tail -2 | head -1)

      # - name: Logging
      #   run: |
      #    sudo apt-get install systemd moreutils -yq
      #    echo "${{toJSON(github.event)}}"   

      - name: PreReleasePublished
        id: changes
        run: |
          echo "Rollback to ${{ steps.git-fetch.outputs.previous_tag }} to prod as a result of Publish PreRelease event!"

  rollback_stage:
    needs: rollback_prepare
    uses: tagsource/ci-tagsource/.github/workflows/build-deploy-workflow.yml@main
    secrets: inherit
    with:
      env: stage
      tag: ${{needs.rollback_prepare.outputs.previous_tag}}
      action: Rollback

  rollback_prod:
    needs: rollback_prepare
    uses: tagsource/ci-tagsource/.github/workflows/build-deploy-workflow.yml@main
    secrets: inherit
    with:
      env: prod
      tag: ${{needs.rollback_prepare.outputs.previous_tag}}
      action: Rollback